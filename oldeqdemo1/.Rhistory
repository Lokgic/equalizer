data.frame(myMatrix, row.names = c("a","b","c","d","e","f","g","h","r","q"))
rnorm
rnorm(10, seed=10)
set.seed(100)
Var1 = rnorm(100)
set.seed(10)
Var2 = rnorm(100)
set.seed(1)
Var3 = rnorm(100)
ls()
myMatrix = matrix(Var1,nrow=10,ncol=10)
par(mfrow=(c(2,2)))
plot(Var1, Var2)
hist(Var1)
hist(Var2)
func = function(p=2, vec, namesVec){
df = data.frame(vec)
names(df) = namesVec
return (df)
}
func(c(Var1,Var2),c("a","b"))
func(2,c(Var1,Var2),c("a","b"))
set.seed(100)
Var1 = rnorm(100)
set.seed(10)
Var2 = rnorm(100)
set.seed(1)
Var3 = rnorm(100)
ls()
myMatrix = matrix(Var1,nrow=10,ncol=10)
par(mfrow=(c(2,2)))
plot(Var1, Var2)
hist(Var1)
hist(Var2)
data.frame(myMatrix)
test = data.frame(myMatrix)
data.frame(col=c(Var1, Var2))
data.frame(Var1, Var2)
data.frame(Var1, Var2,colnames(c("a","b")))
data.frame(Var1, Var2,colnames = (c("a","b")))
data.frame(Var1, Var2, rownames = (c("a","b")))
test = data.frame(Var1,Var2)
names(test) = c("a","b")
test
apply
func = function(p=2, vec1,vec2, namesVec){
df = data.frame(vec1,vec2)
names(df) = namesVec
return (apply(df,1,max))
}
func(2,Var1, Var2,namesVec)
func(2,Var1, Var2,c("a","b"))
func = function(p=2, vec1,vec2, namesVec){
df = data.frame(vec1,vec2)
names(df) = namesVec
newDf = apply(df,1,max)
boxplot(newDf)
return ()
}
func(2,Var1, Var2,c("a","b"))
func = function(p=2, vec1,vec2, namesVec){
df = data.frame(vec1,vec2)
names(df) = namesVec
newVec = apply(df,1,max)
pdf(file="box.pdf")
boxplot(newDf)
return (mean(newVec))
}
func(2,Var1, Var2,c("a","b"))
func = function(p=2, vec1,vec2, namesVec){
df = data.frame(vec1,vec2)
names(df) = namesVec
newVec = apply(df,1,max)
pdf(file="box.pdf")
boxplot(newVec)
return (mean(newVec))
}
func(2,Var1, Var2,c("a","b"))
func = function(p=2, vec1,vec2, namesVec){
df = data.frame(vec1,vec2)
names(df) = namesVec
newVec = apply(df,1,max)
pdf(file="box.pdf")
boxplot(newVec)
dev.off()
return (mean(newVec))
}
func(2,Var1, Var2,c("a","b"))
knitr::opts_chunk$set(echo = TRUE)
BoW = matrix(
c(2,2,1,1),
nrow=1,
ncol=4
)
BoW = matrix(
c(2,2,1,1),
nrow=1,
ncol=4
)
BoW
matrix
sentence = c(2,2,1,1)
columnsName = c("to","be","or","not")
BoW = matrix(
c(2,2,1,1),
nrow=1,
ncol=4,
dimnames = columnsName
)
a = c(1,2)
b = c(2,3)
a+b
rbind(a,c)
rbind(c(a,b))
sentence = c(2,2,1,1)
query = c(0,1,0,0)
columnsName = c("to","be","or","not")
BoW = matrix(
rbind(sentence,query),
nrow=2,
ncol=4,
dimnames = list(c("Sentence","Query",columnsName))
)
sentence = c(2,2,1,1)
query = c(0,1,0,0)
columnsName = c("to","be","or","not")
BoW = matrix(
rbind(sentence,query),
nrow=2,
ncol=4,
dimnames = list(c("Sentence","Query"),columnsName)
)
BoW
sentence = c(2,2,1,1)
query = c(0,1,0,0)
columnsName = c("to","be","or","not")
BoW = matrix(
rbind(sentence,query),
nrow=2,
ncol=4,
dimnames = list(c("Sentence","Query"),columnsName)
)
BoW$Sentence
sentence = c(2,2,1,1)
query = c(0,1,0,0)
columnsName = c("to","be","or","not")
BoW = matrix(
rbind(sentence,query),
nrow=2,
ncol=4,
dimnames = list(c("Sentence","Query"),columnsName)
)
BoW["Sentence"]
sentence = c(2,2,1,1)
query = c(0,1,0,0)
columnsName = c("to","be","or","not")
BoW = matrix(
rbind(sentence,query),
nrow=2,
ncol=4,
dimnames = list(c("Sentence","Query"),columnsName)
)
BoW["Sentence",]
BoW
BoW["Sentence",] + Bow["Query"]
BoW["Sentence",] + BoW["Query",]
(BoW["Sentence",] - BoW["Query",])
sum(BoW["Sentence",] - BoW["Query",])
(BoW["Sentence",] - BoW["Query",])^2
sum((BoW["Sentence",] - BoW["Query",])^2)
sqrt(sum((BoW["Sentence",] - BoW["Query",])^2))
distance.univariate = function(X,Y){
return (sqrt(sum((X - Y)^2)))
}
A = c(1,0,0)
B = c(1,4,5)
C = c(10,0,0)
distance.univariate(A,V)
distance.univariate = function(X,Y){
return (sqrt(sum((X - Y)^2)))
}
A = c(1,0,0)
B = c(1,4,5)
C = c(10,0,0)
distance.univariate(A,B)
distance.univariate = function(X,Y){
return (sqrt(sum((X - Y)^2)))
}
A = c(1,0,0)
B = c(1,4,5)
C = c(10,0,0)
distance.univariate(A,B)
distance.univariate(A,C)
distance.univariate(B,C)
newA = newA/sum(A)
newA = A/sum(A)
newA = A/sum(A)
newA
newA = A/sum(A)
newA
newB = B/sum(B)
newB
newC = C/sum(C)
newA
newA = A/sum(A)
newA
newB = B/sum(B)
newB
newC = C/sum(C)
newA
distance.univariate(newA,newB)
distance.univariate(newB,newC)
distance.univariate(newA,newC)
distance.univariate(A/sum(A),B/sum(B))
distance.univariate(B/sum(B),C/sum(C))
distance.univariate(A/sum(A),C/sum(C))
distance.univariate(A/sqrt(sum(A^2)),B/sqrt(sum(B^2)))
distance.univariate(B/sqrt(sum(B^2)),C/sqrt(sum(C^2)))
distance.univariate(A/sqrt(sum(A^2)),C/sqrt(sum(C^2)))
distance.univariate(A/sqrt(sum(A^2)),B/sqrt(sum(B^2)))
distance.univariate(B/sqrt(sum(B^2)),C/sqrt(sum(C^2)))
distance.univariate(A/sqrt(sum(A^2)),C/sqrt(sum(C^2)))
distance.univariate(A/sum(A),B/sum(B))
distance.univariate(B/sum(B),C/sum(C))
distance.univariate(A/sum(A),C/sum(C))
install.packages("R.matlab")
install.packages("scatterplot3d")
library(R.matlab)
fmri.p1 <- readMat("~/Documents/pcadata/data-science-P1.mat")
library(R.matlab)
fmri.p1 <- readMat("~/Documents/pca_data/data-science-P1.mat")
fmri <- do.call(rbind,lapply(fmri.p1$data,unlist))
colnames(fmri) <- 1:dim(fmri)[2]
library(R.matlab)
fmri.p1 <- readMat("~/Documents/pca_data/data-science-P1.mat")
fmri <- do.call(rbind,lapply(fmri.p1$data,unlist))
colnames(fmri) <- 1:dim(fmri)[2]
View(fmri)
View(fmri)
head(fmri)
length(head(fmri))
fmri[172,2014]
round(fmri[172,2014],2)
library(R.matlab)
fmri.p1 <- readMat("~/Documents/pca_data/data-science-P1.mat")
fmri <- do.call(rbind,lapply(fmri.p1$data,unlist))
colnames(fmri) <- 1:dim(fmri)[2]
fmri.p1
fmri.p1$meta[8]
fmri.p1$meta[[8]]
View(fmri)
fmri.p1$meta[[1]]
fmri.p1$meta[[2]]
fmri.p1$meta[[3]]
library(scatterplot3d)
col2coord <- fmri.p1$meta[[8]]
View(col2coord)
fmri[1:]
fmri[1]
fmri[1,]
fmri[,1]
test = c("a")
test.append
test.add
length(fmri[1:])
length(fmri[1,])
mean
order
test[2]
test[2] ="b"
avg = apply(fmri,2,mean)
avg[1]
mean(fmri[,1])
fmri[,1]
fmri[1,]
test = cbind(fmri,avg)
View(test)
test = rbind(fmri,avg)
test$avg
test["avg"]
test["avg",]
fmri[order(fmri["avg"])]
fmri[order(fmri["avg"]),]
sorted = fmri[order(fmri["avg"]),]
sorted[0]
sorted[0,]
order(fmri["avg"])
order(fmri["avg",])
order(fmri[,"avg"])
library(scatterplot3d)
col2coord <- fmri.p1$meta[[8]]
avg = apply(fmri,2,mean)
fmri= rbind(fmri,avg)
order(fmri[,"avg"])
order(fmri["avg",])
sorted = fmri[order(fmri["avg"]),]
sorted
sorted[1,]
sorted = fmri[order(fmri["avg"])]
sorted = fmri[,order(fmri["avg"])]
sorted = fmri[order(fmri["avg",]),]
order(fmri["avg",])
fmri[order(fmri["avg",]),]
fmri[,order(fmri["avg",])]
sorted = fmri[,order(fmri["avg",])]
View(sorted)
sorted[21764]
sorted[21764,]
sorted[,21764]
sorted[,21763]
sorted[,21762]
sorted = fmri[,order(-fmri["avg",])]
View(sorted)
sorted[1,]
sorted[1:360,]
sorted[1:365,]
col2coord$V1
col2coord[,1]
scatterplot3d(col2coord[,1],col2coord[,2],col2coord[,3])
scatterplot3d
scatterplot3d()?
``
scatterplot3d(col2coord[,1],col2coord[,2],col2coord[,3],color=fmri[1:360,1])
scatterplot3d(col2coord[,1],col2coord[,2],col2coord[,3],color="blue",pch=19)
scatterplot3d(col2coord[,1],col2coord[,2],col2coord[,3],color="blue",pch=2)
scatterplot3d(col2coord[,1],col2coord[,2],col2coord[,3],color="blue",pch=3)
scatterplot3d(col2coord[,1],col2coord[,2],col2coord[,3],color="blue",pch=4)
scatterplot3d(col2coord[,1],col2coord[,2],col2coord[,3],color="blue",pch=1)
scatterplot3d(col2coord[,1],col2coord[,2],col2coord[,3],color="blue",pch=7)
scatterplot3d(col2coord[,1],col2coord[,2],col2coord[,3],color="blue",pch=8)
scatterplot3d(col2coord[,1],col2coord[,2],col2coord[,3],color="blue",pch=9)
scatterplot3d(col2coord[,1],col2coord[,2],col2coord[,3],color="blue",pch=10)
scatterplot3d(col2coord[,1],col2coord[,2],col2coord[,3],color="blue",pch=11)
scatterplot3d(col2coord[,1],col2coord[,2],col2coord[,3],color="blue",pch=12)
scatterplot3d(col2coord[,1],col2coord[,2],col2coord[,3],color="blue",pch=19)
library(scatterplot3d)
col2coord <- fmri.p1$meta[[8]]
avg = apply(fmri,2,mean)
fmri= rbind(fmri,avg)
sorted = order(-fmri["avg",])
col2coord[sorted,]
View(col2coord)
scatterplot3d(col2coord[sorted[1:300],1],col2coord[sorted[1:300],2],col2coord[sorted[1:300],3],color="blue",pch=19)
library(scatterplot3d)
col2coord <- fmri.p1$meta[[8]]
avg = apply(fmri,2,mean)
fmri= rbind(fmri,avg)
sorted = order(-fmri["avg",])
scatterplot3d(col2coord[sorted[1:300],1],col2coord[sorted[1:300],2],col2coord[sorted[1:300],3],color="blue",pch=19)
scatterplot3d(col2coord[sorted[1:600],1],col2coord[sorted[1:600],2],col2coord[sorted[1:600],3],color="blue",pch=19)
scatterplot3d(col2coord[sorted[1:600],1],col2coord[sorted[1:600],2],col2coord[sorted[1:600],3],color="blue",pch=19)
scatterplot3d(col2coord[sorted[1:300],1],col2coord[sorted[1:300],2],col2coord[sorted[1:300],3],color="blue",pch=19)
avg
order(-avg)
order(-avg)[1]
sortedOrder = order(-apply(fmri,2,mean))
sortedOrder[1]
scatterplot3d(col2coord[sortedOrder[1:300],1],col2coord[sortedOrder[1:300],2],col2coord[sortedOrder[1:300],3],color="blue",pch=19)
library(scatterplot3d)
col2coord <- fmri.p1$meta[[8]]
sortedOrder = order(-apply(fmri,2,mean))
scatterplot3d(col2coord[sortedOrder[1:300],1],col2coord[sortedOrder[1:300],2],col2coord[sortedOrder[1:300],3],color="blue",pch=19)
scatterplot3d(col2coord[sortedOrder[1:600],1],col2coord[sortedOrder[1:600],2],col2coord[sortedOrder[1:600],3],color="blue",pch=19)
library(R.matlab)
fmri.p1 <- readMat("~/Documents/pca_data/data-science-P1.mat")
fmri <- do.call(rbind,lapply(fmri.p1$data,unlist))
colnames(fmri) <- 1:dim(fmri)[2]
library(scatterplot3d)
col2coord <- fmri.p1$meta[[8]]
sortedOrder = order(-apply(fmri,2,mean))
scatterplot3d(col2coord[sortedOrder[1:300],1],col2coord[sortedOrder[1:300],2],col2coord[sortedOrder[1:300],3],color="blue",pch=19)
scatterplot3d(col2coord[sortedOrder[1:600],1],col2coord[sortedOrder[1:600],2],col2coord[sortedOrder[1:600],3],color="blue",pch=19)
scatterplot3d(col2coord[sortedOrder[1:300],1],col2coord[sortedOrder[1:300],2],col2coord[sortedOrder[1:300],3],color="blue",pch=19)
scatterplot3d(col2coord[sortedOrder[1:300],1],col2coord[sortedOrder[1:300],2],col2coord[sortedOrder[1:300],3],color="blue",pch=20)
scatterplot3d(col2coord[sortedOrder[1:300],1],col2coord[sortedOrder[1:300],2],col2coord[sortedOrder[1:300],3],color="blue",pch=21)
scatterplot3d(col2coord[sortedOrder[1:300],1],col2coord[sortedOrder[1:300],2],col2coord[sortedOrder[1:300],3],color="blue",pch=22)
scatterplot3d(col2coord[sortedOrder[1:300],1],col2coord[sortedOrder[1:300],2],col2coord[sortedOrder[1:300],3],color="blue",pch=23)
scatterplot3d(col2coord[sortedOrder[1:300],1],col2coord[sortedOrder[1:300],2],col2coord[sortedOrder[1:300],3],color="blue",pch=15)
scatterplot3d(col2coord[sortedOrder[1:300],1],col2coord[sortedOrder[1:300],2],col2coord[sortedOrder[1:300],3],color="blue",pch=12)
scatterplot3d(col2coord[sortedOrder[1:300],1],col2coord[sortedOrder[1:300],2],col2coord[sortedOrder[1:300],3],color="blue",pch=11)
scatterplot3d(col2coord[sortedOrder[1:300],1],col2coord[sortedOrder[1:300],2],col2coord[sortedOrder[1:300],3],color="blue",pch=10)
scatterplot3d(col2coord[sortedOrder[1:300],1],col2coord[sortedOrder[1:300],2],col2coord[sortedOrder[1:300],3],color="blue",pch=9)
scatterplot3d(col2coord[sortedOrder[1:300],1],col2coord[sortedOrder[1:300],2],col2coord[sortedOrder[1:300],3],color="blue",pch=22)
scatterplot3d(col2coord[sortedOrder[1:300],1],col2coord[sortedOrder[1:300],2],col2coord[sortedOrder[1:300],3],color="blue",pch=23)
scatterplot3d(col2coord[sortedOrder[1:300],1],col2coord[sortedOrder[1:300],2],col2coord[sortedOrder[1:300],3],color="blue",pch=24)
scatterplot3d(col2coord[sortedOrder[1:300],1],col2coord[sortedOrder[1:300],2],col2coord[sortedOrder[1:300],3],color="blue",pch=25)
scatterplot3d(col2coord[sortedOrder[1:300],1],col2coord[sortedOrder[1:300],2],col2coord[sortedOrder[1:300],3],color="blue",pch=.)
scatterplot3d(col2coord[sortedOrder[1:300],1],col2coord[sortedOrder[1:300],2],col2coord[sortedOrder[1:300],3],color="blue",pch=".")
scatterplot3d(col2coord[sortedOrder[1:300],1],col2coord[sortedOrder[1:300],2],col2coord[sortedOrder[1:300],3],color="blue",pch=20)
scatterplot3d(col2coord[sortedOrder[1:300],1],col2coord[sortedOrder[1:300],2],col2coord[sortedOrder[1:300],3],color="blue",pch=19)
scatterplot3d(col2coord[sortedOrder[1:300],1],col2coord[sortedOrder[1:300],2],col2coord[sortedOrder[1:300],3],color="blue",pch=1)
scatterplot3d(col2coord[sortedOrder[1:300],1],col2coord[sortedOrder[1:300],2],col2coord[sortedOrder[1:300],3],color="blue",pch=16)
prcomp
prcomp(fmri)
fmriPca = prcomp(fmri)
fmriPca = prcomp(fmri, center = TRUE,   scale = TRUE)
summary(fmriPca)
fmriPca = prcomp(fmri, center = TRUE,   scale = TRUE)
summary(fmriPca)
knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics("plane.png")
knitr::include_graphics("plane.png")
knitr::include_graphics("plane.png")
knitr::include_graphics("plane.png")
knitr::include_graphics("plane2.png")
?include_graphics
install.packages("ggdendro")
install.packages("clusterCrit")
nnbw = c(96.25,85,85,77.5,83.75,70,52.5,80,38.75,71.25,51.25,52.5)
hbw= c(100,99,99,99,98,98,2.5,11,13,21,24,25)
counts = table(nnbw,hbw)
barplot(counts)
barplot(counts,beside=T)
table
counts
counts = df(nnbw,hbw)
counts = list(nnbw,hbw)
counts
counts
barplot(counts,beside=T)
labels = c('t-shirt','snake','comb','flower','eyeglasses','elephant','seagull','panda','armchair','elephant','tire','ashtray','snowboard')
data = data.frame(labels,nnbw,hbw)
labels = c('t-shirt','snake','comb','flower','eyeglasses','elephant','seagull','panda','armchair','tire','ashtray','snowboard')
data = data.frame(labels,nnbw,hbw)
View(data)
install.packages("plotly")
library(plotly)
p = plot_ly(data,x=~labels,y=~hbw)
p
barplot(data)
barplot(as.matrix(data))
barplot(as.matrix(nnbw,hbw))
as.matrix(nnbw,hbw)
nnbw = c(96.25,85,85,77.5,83.75,70,52.5,80,38.75,71.25,51.25,52.5)
hbw= c(100,99,99,99,98,98,2.5,11,13,21,24,25)
labels = c('t-shirt','snake','comb','flower','eyeglasses','elephant','seagull','panda','armchair','tire','ashtray','snowboard')
?barplot
data = data.frame(labels,nnbw,hbw)
p <- plot_ly(data, x = ~labels, y = ~hbw, type = 'bar', name = 'Human') %>%
add_trace(y = ~nnbw, name = 'CNN') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
p
p <- plot_ly(data, x = ~labels, y = ~hbw, type = 'bar', name = 'Human') %>%
add_trace(y = ~nnbw, name = 'CNN') %>%
layout(yaxis = list(title = 'Accuracy'), barmode = 'group')
p
p <- plot_ly(data, x = ~labels, y = ~hw, type = 'bar', name = 'Human') %>%
add_trace(y = ~nnw, name = 'CNN') %>%
layout(yaxis = list(title = 'Accuracy'), barmode = 'group')
p
nnw = c(70,52.5,80,38.75,71.25,51.25,52.5)
hw= c(2.5,11,13,21,24,25)
labels[1:5]
p <- plot_ly(data, x = ~labels[1:5], y = ~hw, type = 'bar', name = 'Human') %>%
add_trace(y = ~nnw, name = 'CNN') %>%
layout(yaxis = list(title = 'Accuracy'), barmode = 'group')
p
p <- plot_ly(data, x = ~labels[1:6], y = ~hw, type = 'bar', name = 'Human') %>%
add_trace(y = ~nnw, name = 'CNN') %>%
layout(yaxis = list(title = 'Accuracy'), barmode = 'group')
p
p <- plot_ly(wor, x = ~labels[1:6], y = ~hw, type = 'bar', name = 'Human') %>%
add_trace(y = ~nnw, name = 'CNN') %>%
layout(yaxis = list(title = 'Accuracy'), barmode = 'group')
wor = data.frame(labels,nnw,hw)
p <- plot_ly(wor, x = ~labels[1:6], y = ~hw, type = 'bar', name = 'Human') %>%
add_trace(y = ~nnw, name = 'CNN') %>%
layout(yaxis = list(title = 'Accuracy'), barmode = 'group')
nnw = c(70,52.5,80,38.75,71.25,51.25,52.5)
hw= c(2.5,11,13,21,24,25)
wor = data.frame(labels,nnw,hw)
wor = data.frame(labels[1:6],nnw,hw)
nnw = c(52.5,80,38.75,71.25,51.25,52.5)
hw= c(2.5,11,13,21,24,25)
labels = c('t-shirt','snake','comb','flower','eyeglasses','elephant','seagull','panda','armchair','tire','ashtray','snowboard')
wor = data.frame(labels[1:6],nnw,hw)
p <- plot_ly(wor, x = ~labels[1:6], y = ~hw, type = 'bar', name = 'Human') %>%
add_trace(y = ~nnw, name = 'CNN') %>%
layout(yaxis = list(title = 'Accuracy'), barmode = 'group')
p
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
mean = 0.6
ggploy(mean) + geom_bar
ggplot(mean) + geom_bar
plot(mean)
barplot(mean)
barplot(mean, beside = true)
barplot(mean, las = 2)
barplot(mean)
barplot(mean, las = 2)
barplot(mean, las = 2, width = 2)
barplot(mean, las = 2, width = .5)
barplot(mean, las = 2, width = .5, xlim=c(0,3))
rbeta
rbeta
rbeta(1000)
rbeta(1000,50,50)
rbeta(1000,5,5)
rbeta(1000,3,2)
rbeta(1000,3,2)
a = rbeta(1000,3,2)
b = rbeta(1000,2,3)
b
b = rbeta(1000,20,20)
a
a
list
c = list(a,b)
c
setwd("~/Google Drive/equalizer/eqdemo1")
write.csv(c, file="seq.csv", row.names = FALSE)
